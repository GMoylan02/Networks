Routing: Routers all communicate to get an idea of where all other routers are and how to get to them efficiently
can occur across multiple networks

Forwarding: Using the knowledge gained from routing, and given a packet with a destination, know who to forward
the packet to

Each router has a forwarding table where
key = destination node
value = next node to go to in order to reach destination node
so for each possible destination, the router has stored what it believes to be the best possible next step

header: (subject to change)
1 byte: booleans
1 byte: no_hops
2 bytes: packet id (random)
4 bytes: src address
4 bytes: destination address
total: 12 bytes

bools:
1 bit: ack
1 bit: is_broadcast
1 bit: removal_request

if u receive a broadcast, check if no_hops is less than the current value for that src_addr. replace if so

check if you know the dest_addr. if not, save the fact that {address} is searching for dest_addr, then increment no_hops and forward broadcast to all other routers

if you do know, get the no_hops value for that dest, increment it, add it to header and send a 'known' response to {address}

if u receive a non-broadcast packet for an unknown dest_addr or a closer dest_addr, add that dest_addr and {address} to known fwd table, save no_hops with dest_addr,
loop thru all addresses searchign for dest_addr and send them 'known' responses with no_hops incremented

if its non-broadcast for known location, just forward

as a client, if the dest u want to send to isnt in routing table, then broadcast with no_hops=1
if it is, just forward with no_hops = 0

if u receive a broadcast, send a reply with no_hops = 1
if u receive a packet with dest not equal to urself, add that address to routing table

either way, print result