# Defines a small topology of 3 routers, 5 networks and 2 endpoints
# docker compose -f compose.yaml --profile routers up -d
# docker compose -f compose.yaml --profile endpoints --profile routers up -d
# docker compose -f compose.yaml --profile routers --profile endpoints down -t 1
services:
  # 3 routers connecting networks
  router1:
    profiles: ["routers"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router1
    networks:
      - stub1
      - trans1

  router2:
    profiles: ["routers"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router2
    networks:
      - trans1
      - trans2

  router3:
    profiles: ["routers"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router3
    networks:
      - stub2
      - trans2

  router4:
    profiles: ["routers"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router4
    networks:
      - trans1
      - trans3

  router5:
    profiles: [ "routers" ]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router5
    networks:
      - trans3
      - stub3

  router6:
    profiles: [ "routers" ]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router6
    networks:
      - trans2
      - trans4

  router7:
    profiles: [ "routers" ]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 router.py
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router7
    networks:
      - trans4
      - stub4

  # 2 endpoints creating traffic
  client1:
    profiles: ["endpoints"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 client.py client1 \xAA\xAA\xAA\xAA
    stdin_open: true
    tty: true
    #depends_on:
    #  - router1
    environment:
      HOSTNAME: client1
    networks:
      - stub1

  client2:
    profiles: ["endpoints"]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 client.py client2 BBBBBBBB
    stdin_open: true
    tty: true
    #depends_on:
    #  - router3
    environment:
      HOSTNAME: client2
    networks:
      - stub2

  client3:
    profiles: [ "endpoints" ]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 client.py client3 CCCCCCCC
    stdin_open: true
    tty: true
    #depends_on:
    #  - router1
    environment:
      HOSTNAME: client3
    networks:
      - stub3

  client4:
    profiles: [ "endpoints" ]
    image: "pycimage"
    build: ..
    volumes:
      - .:/compnets
    command: python3 client.py client4 DDDDDDDD
    stdin_open: true
    tty: true
    #depends_on:
    #  - router1
    environment:
      HOSTNAME: client4
    networks:
      - trans4

  tcpdump:
    build:
      context: .
      dockerfile: ./docker/tcpdump/Dockerfile
    volumes:
      - ./pcap:/pcap
    networks:
      - stub1
      - stub2
      - trans1
      - trans2
    privileged: true


# 2 Stub networks and 3 transient networks
networks:
  stub1:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
  stub2:
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
  stub3:
    ipam:
      driver: default
      config:
        - subnet: 192.168.20.0/24
  stub4:
    ipam:
      driver: default
      config:
        - subnet: 192.168.30.0/24
  trans1:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
  trans2:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/24
  trans3:
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/24
  trans4:
    ipam:
      driver: default
      config:
        - subnet:  172.24.0.0/24
